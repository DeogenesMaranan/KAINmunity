<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>