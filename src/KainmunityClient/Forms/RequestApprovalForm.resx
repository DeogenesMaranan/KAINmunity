<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="save.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAGAAAABgCAYAAADimHc4AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EAAACxABrSO9dQAAAzpJREFUeF7t2U1OVEEUhuEGmYGuQqM7UZk7NUYT1+LIH6KbMFHiiox/69Bzcl8n
        JEdpqK/uCfd7kkoMFPWWVdA03TszMzMzMzMzM7PK75vvFf/VntjkTdf3EtjgFvS8BDa3Ff0ugY1tSa9L
        YFNb0+cS2NAW9bgENrNV618CGykxrS22eR3rXgKbKDGtLbZ5XetdAhsoMa0ttjnCOpdAvMS0ttjmKPMv
        gXCJaW2xzZHmXgLREtPaYpujzbsEgiWmtcU2FeZcArES09pimyr6SyBUYlpbbFOGjA6dEtPaYpsyZHTo
        lJjWFtuUIaNDp8S0ttimDBkdOiWmtcU2Zcjo0CkxrS22KUNGh06JaW2xTRkyOnRKTGuLbcqQ0aFjBY5J
        h44VOCYdOlbgmHToWIFj0qFjBY5Jh44VOCYdOlbgmHToWIFj0qFjBY5Jh44VOCYdOlbgmHToWIFj0qFj
        BY5Jh44VOCYdOlbgmHToWIFj0qGzlm8xzmI8jHE/xjEj/50fy899j7EajkmHzmw/YryMcYttlGLOYYwn
        Mb7GmI5t6NCZ6VOMY/KXFl9zEuM8F5iJvA6dWV7HOCC9t/ja/Gl4kwvNQlqHzgyfYxySvbJY4yDGx1xw
        BrI6dNTyF+neDzuVWCsfjn7mwmokdeioPSM3TKz5Yllai5wOHaV8qvnfZzv7yjVj5LMpKXI6dJTekRou
        1n6/JHRI6dBRekRquFj78ZLQIaVDR+kuqeFi7fyLWYqUDh2lE1LD5dpLQoeUDh0l5QXcWRI6pHToKN0j
        NVys/WBJ6JDSoaOk/CV8uiR0SOnQUTojNVys/WFJ6JDSoaOUL0Mo/hA7iuE/xC7pOblhYs18P0GOnA4d
        tfxOHfZsKNa6HeNXLqxGUofODPlmyoiXo/M9gS+54AxkdejMkm+mXPkS8mtjvM2FZiGtQ2em/EnY++Eo
        viYfdqZ95/9FXofObPlmSv4SPWIbpZiT3/VPY0x5zL+IbejQWUs+Rc2XlPNVzfyrNl/byZH/zo/l5+RP
        Nf+FY9KhYwWOSYeOFTgmHTpW4Jh06FiBY9KhYwWOSYeOFTgmHTpW4Jh06FiBYzIzMzMzMzMzM7tgt/sD
        y2KDajFRE7gAAAAASUVORK5CYII=
</value>
  </data>
</root>